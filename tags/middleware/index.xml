<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Middleware on blog.10rane.com</title>
    <link>http://tatsuyano.github.io/tags/middleware/</link>
    <description>Recent content in Middleware on blog.10rane.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 20 Oct 2014 01:00:00 +0900</lastBuildDate>
    <atom:link href="http://tatsuyano.github.io/tags/middleware/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>fluentdをインストールする</title>
      <link>http://tatsuyano.github.io/2014/10/20/how-to-install-and-setup-fluentd/</link>
      <pubDate>Mon, 20 Oct 2014 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2014/10/20/how-to-install-and-setup-fluentd/</guid>
      <description>

&lt;p&gt;blogのアクセス数がほんの少し増えてきたので、fluentd(フルーエントディ) をインストールしてみます。
今回、fluentd をインストールする環境は、以下になります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AmazonLinux&lt;/li&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;ruby 2.1.0 (anyenv)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fluentd-を導入すると何ができるか:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;fluentd を導入すると何ができるか&lt;/h3&gt;

&lt;p&gt;fluentd はログなどを取得し、取得したデータを整形して elasticsearch + kibana などに渡すことで、データを簡単に可視化することができます。&lt;/p&gt;

&lt;h3 id=&#34;fluentdをgem経由でインストールする:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;fluentdをgem経由でインストールする&lt;/h3&gt;

&lt;p&gt;まずは&lt;a href=&#34;http://docs.fluentd.org/articles/install-by-gem&#34;&gt;公式&lt;/a&gt;どおりに&lt;code&gt;gem&lt;/code&gt;でインストールしてみます。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注意&lt;/em&gt;&lt;br /&gt;
&lt;a href=&#34;http://eure.jp/blog/fluentd_elasticsearch_kibana&#34;&gt;こちら&lt;/a&gt;の記事を参考に、&lt;a href=&#34;#yum_install&#34;&gt;yum経由でインストール&lt;/a&gt;も行いました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gem install fluentd --no-ri --no-rdoc
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

メモリが割り当てられない？というエラーが出ました。

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ERROR:  Error installing fluentd:
        ERROR: Failed to build gem native extension.

    $HOME/.anyenv/envs/rbenv/versions/2.1.0/bin/ruby extconf.rb
    Cannot allocate memory - $HOME/.anyenv/envs/rbenv/versions/2.1.0/bin/ruby extconf.rb 2&gt;&amp;1

Gem files will remain installed in $HOME/.anyenv/envs/rbenv/versions/2.1.0/lib/ruby/gems/2.1.0/gems/yajl-ruby-1.2.1 for inspection.
Results logged to $HOME/.anyenv/envs/rbenv/versions/2.1.0/lib/ruby/gems/2.1.0/extensions/x86_64-linux/2.1.0-static/yajl-ruby-1.2.1/gem_make.out
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

試しに`aws-sdk`をインストールしてから、再度インストールしてみたらうまくいきました。

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gem install aws-sdk
$ gem install fluentd --no-ri --no-rdoc

$ source $HOME/.zshrc
$ fluentd --version
fluentd 0.10.55
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

#### セットアップ

次はセットアップを行います。
指定した`fluent`のホームディレクトリ直下に`fluent.conf`というファイルが生成されます。

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ fluentd --setup app/fluent
Installed app/fluent/fluent.conf.

$ tree app/fluent
app/fluent
├── fluent.conf
└── plugin
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

#### 起動方法

試しに公式どおりに起動してみます。
`-vv`でトレースモード、`&amp;`でバッググラウンドで起動します。
起動後にjsonを`fluent-cat`に渡して、`debug`タグの設定(stdout)どおり出力します。

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ fluentd -c app/fluent/fluent.conf -vv &amp;
[1] 22209

$ echo &#39;{&#34;json&#34;:&#34;message&#34;}&#39; | fluent-cat debug.test

2014-10-20 05:48:01 +0000 [trace]: plugin/in_forward.rb:189:initialize: accepted fluent socket from &#39;127.0.0.1:44260&#39;: object_id=69925032642500
2014-10-20 05:48:01 +0000 debug.test: {&#34;json&#34;:&#34;message&#34;}
2014-10-20 05:48:01 +0000 [trace]: plugin/in_forward.rb:245:on_close: closed fluent socket object_id=69925032642500
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

### Nginxのログをfluentdに流す

`fluent.conf`には、ログの入力方法`&lt;source&gt;`と、出力方法`&lt;match&gt;`を設定することができます。

&lt;a name=&#34;conf&#34;&gt;app/fluent/fluent.conf&lt;/a&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# access_log
&amp;lt;source&gt;
  type tail
  path /var/log/nginx/access.log
  format ltsv
  time_key time_local
  time_format %d/%b/%Y:%H:%M:%S %z
  pos_file /var/tmp/nginx_access_log.pos
  tag nginx.access
 &amp;lt;/source&gt;
 &amp;lt;match nginx.access&gt;
  type elasticsearch
  host localhost
  port 9200
  type_name access_log
  logstash_format true
  logstash_prefix nginx_access
  logstash_dateformat %Y%m
  buffer_type memory
  buffer_chunk_limit 10m
  buffer_queue_limit 10
  flush_interval 1s
  retry_limit 16
  retry_wait 1s
  &amp;lt;/match&gt;
  
 # error_log
 &amp;lt;source&gt;
  type tail
  path /var/log/nginx/error.log
  format /^(? &amp;lt;time&gt;[^ ]+ [^ ]+) \[(? &amp;lt;log_level&gt;.*)\] (? &amp;lt;pid&gt;\d*).(? &amp;lt;tid&gt;[^:]*): (? &amp;lt;message&gt;.*)$/
  pos_file /var/tmp/nginx_error_log.pos
  tag nginx.error
 &amp;lt;/source&gt;
 &amp;lt;match nginx.error&gt;
  type elasticsearch
  host localhost
  port 9200
  type_name error_log
  logstash_format true
  logstash_prefix nginx_error
  logstash_dateformat %Y%m
  buffer_type memory
  buffer_chunk_limit 10m
  buffer_queue_limit 10
  flush_interval 1s
  retry_limit 16
  retry_wait 1s
 &amp;lt;/match&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回、fluentd を自分の$HOME以下にインストールしているので、
&lt;code&gt;path&lt;/code&gt;に設定してあるログのパーミッションに注意してください。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;format&lt;/code&gt;をltsvに変更しているので、Nginx のログフォーマットも ltsv に合わせてください。&lt;/p&gt;

&lt;h4 id=&#34;nginxのログをltsvに変更する:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;Nginxのログをltsvに変更する&lt;/h4&gt;

&lt;p&gt;/etc/nginx/nginx.conf&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;log_format  ltsv  &#34;remote_addr:$remote_addr\t&#34;
                  &#34;remote_user:$remote_user\t&#34;
                  &#34;time_local:$time_local\t&#34;
                  &#34;request:$request\t&#34;
                  &#34;status:$status\t&#34;
                  &#34;body_bytes_sent:$body_bytes_sent\t&#34;
                  &#34;http_refer:$http_referer\t&#34;
                  &#34;http_user_agent:$http_user_agent&#34;;

access_log  /var/log/nginx/access.log  ltsv;
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

現在生成されている`access.log`を削除し、Nginx の再起動、及び fluentd を(バックエンドで)起動します。

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo rm /var/log/nginx/access.log
$ sudo /etc/init.d/nginx restart

$ fluentd -c app/fluent/fluent.conf -vv &amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/tmp/nginx.logが更新されていれば成功です。&lt;/p&gt;

&lt;h3 id=&#34;a-name-yum-install-yum経由でのインストール:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;&lt;a name=&#34;yum_install&#34;&gt;yum経由でのインストール&lt;/h3&gt;

&lt;p&gt;トレジャーデータ社が用意したyumリポジトリを使い、td-agent(fluentd) をインストールします。&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo bash&lt;/p&gt;

&lt;h1 id=&#34;cat-etc-yum-repos-d-treasuredata-repo:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;cat &amp;gt; /etc/yum.repos.d/treasuredata.repo&lt;/h1&gt;

&lt;p&gt;[treasuredata]
name=TreasureData
baseurl=&lt;a href=&#34;http://packages.treasure-data.com/redhat/$basearch&#34;&gt;http://packages.treasure-data.com/redhat/$basearch&lt;/a&gt;
gpgcheck=0&lt;/p&gt;

&lt;p&gt;$ sudo yum -y install td-agent
$ sudo chkconfig td-agent on
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&#34;fluentd-プラグインインストール:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;fluentd プラグインインストール&lt;/h4&gt;

&lt;p&gt;anyenvで管理していないrubyをupdateするのは少し気が引けます。。&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo /usr/lib64/fluent/ruby/bin/fluent-gem update
$ sudo /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-config-expander
$ sudo /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-elasticsearch
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&#34;configファイル:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;configファイル&lt;/h4&gt;

&lt;p&gt;td-agentのconfigファイルは&lt;code&gt;/etc/td-agent/td-agent.conf&lt;/code&gt;にあるので、
&lt;a href=&#34;#conf&#34;&gt;以前作ったconfigファイル&lt;/a&gt;で上書きします。&lt;/p&gt;

&lt;p&gt;すでに&lt;code&gt;posファイル&lt;/code&gt;が生成されている場合は、削除してください。&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo cp $HOME/app/fluentd/fluent.conf /etc/td-agent/td-agent.conf
$ sudo rm /var/tmp/nginx_access_log.pos
$ sudo rm /var/tmp/nginx_error_log
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&#34;起動-停止:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;起動、停止&lt;/h4&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo /etc/init.d/td-agent start
$ sudo /etc/init.d/td-agent stop
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;参考記事:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;参考記事&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.fluentd.org/articles/install-by-gem&#34;&gt;Installing Fluentd Using Ruby Gem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lab.bizreach.co.jp/66/&#34;&gt;AWS（Amazon Linux）にfluentdをいれてみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.excale.net/index.php/archives/2682&#34;&gt;NginxのアクセスログをLTSV形式にしてfluentdで回収する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knowledge.sakura.ad.jp/tech/1336/&#34;&gt;柔軟なログ収集を可能にする「fluentd」入門&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.fluentd.org/ja/articles/common-log-formats&#34;&gt;Common Log Formats and How To Parse Them&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eure.jp/blog/fluentd_elasticsearch_kibana/&#34;&gt;今日から始めるfluentd × Elasticsearch × kibana – カジュアルな解析・高速化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Postfixをインストールする</title>
      <link>http://tatsuyano.github.io/2014/09/09/how-to-install-and-setup-postfix/</link>
      <pubDate>Tue, 09 Sep 2014 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2014/09/09/how-to-install-and-setup-postfix/</guid>
      <description>

&lt;p&gt;仕事ではじめて Postfix を使ったので、インストール方法などを残しておきます。&lt;/p&gt;

&lt;h3 id=&#34;postfixのインストール:7598d049eaa8c628e37dee32b9bf32be&#34;&gt;Postfixのインストール&lt;/h3&gt;

&lt;p&gt;Postfix のインストール前に Sendmail がインストールされている場合は止めておく。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo chkconfig sendmail off
$ sudo /etc/init.d/sendmail stop

$ sudo yum -y install postfix
$ sudo chkconfig --add postfix
$ sudo chkconfig on postfix
$ sudo /etc/init.d/postfix start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;メールサーバー(MTA)を postfix に切り替え&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo update-alternatives --set mta /usr/sbin/sendmail.postfix
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

### postfix の設定

設定は主に`/etc/postfix/`配下の3ファイル

* /etc/postfix/main.cf      =&gt; 設定全般
* /etc/postfix/aliases.reg  =&gt; メールを受信するユーザの設定
* /etc/postfix/virtual      =&gt; ドメインの設定

#### /etc/postfix/main.cf

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# mydomainを設定しない場合、メールのホスト名としても使われる(と思われる)
myhostname = hogehoge.net

# メールをローカルで受信するドメイン名を設定
mydestination = $myhostname

# 全てのメールを受け取る
inet_interfaces = all

# ipv6、ipv4 両方許可する
inet_protocols = all

# コメントアウト
#mynetworks_style = host

# LAN内のネットワークを指定
mynetworks = 127.0.0.0/8

# Telnet等でアクセスした際にpostfixのバージョン情報の表示
smtpd_banner = $myhostname ESMTP SERVER...

# 許可
allow_mail_to_commands = alias,forward,include
allow_mail_to_files = alias,forward,include
allow_min_user = yes

# 別のドメイン mail.hogehoge.net でも受信する
virtual_maps = hash:/etc/postfix/virtual

# 受信したメールを正規表現(regexp)で指定ユーザに振り分ける
alias_maps = hash:/etc/aliases,regexp:/etc/postfix/aliases.reg
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;etc-postfix-aliases-reg:7598d049eaa8c628e37dee32b9bf32be&#34;&gt;/etc/postfix/aliases.reg&lt;/h4&gt;

&lt;p&gt;メールアドレスにパラメータを含めたい場合、&lt;code&gt;aliases.reg&lt;/code&gt;に正規表現を使って、受信したメールを指定のユーザ(メールアドレス)に送ることができる。&lt;/p&gt;

&lt;p&gt;例では &lt;code&gt;support-1@hogehoge.net&lt;/code&gt;宛のメールを&lt;code&gt;support@hogehoge.net&lt;/code&gt;と同じユーザ(メールアドレス)に送る。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;/^support-[0|1](@hogehoge.net)?$/ support
/^support(@hogehoge.net)?$/ support
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;etc-postfix-virtual:7598d049eaa8c628e37dee32b9bf32be&#34;&gt;/etc/postfix/virtual&lt;/h4&gt;

&lt;p&gt;サブドメインなど、別ドメインも指定したい場合に設定する。&lt;br /&gt;
例では、&lt;code&gt;@mail.hogehoge.net&lt;/code&gt;というドメインに来たアドレスも&lt;code&gt;support&lt;/code&gt;ユーザに配送されるようにしている。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;@mail.hogehoge.net  support
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;virtual&lt;/code&gt;の設定を反映させるには、&lt;code&gt;postmap&lt;/code&gt;コマンドで&lt;code&gt;virtual.db&lt;/code&gt;を作成し、postfix を再起動する。&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo postmap /etc/postfix/virtual
$ sudo /etc/init.d/postfix reload
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;参考サイト:7598d049eaa8c628e37dee32b9bf32be&#34;&gt;参考サイト&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.postfix-jp.info/trans-2.0/jhtml/basic.html&#34;&gt;Postfix の設定 - 基本&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.uetyi.mydns.jp/wordpress/postfix-setting/entry-476.html&#34;&gt;Postfixでのドメイン名やホスト名の設定について&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://linux.kororo.jp/cont/server/postfix.php&#34;&gt;Postfixによるメールサーバーの構築&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.honestyworks.jp/blog/archives/193&#34;&gt;postfix の alias を正規表現で指定したいときの注意点&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://linux.kororo.jp/cont/server/postfix_virtual.php&#34;&gt;Postfix で複数ドメインの管理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>memcachedのインストール</title>
      <link>http://tatsuyano.github.io/2014/07/29/install-memcached/</link>
      <pubDate>Tue, 29 Jul 2014 04:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2014/07/29/install-memcached/</guid>
      <description>

&lt;p&gt;まずはyumでmemcachedのインストール&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# yum install -y memcached memcached-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;libmemcachedのインストール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://launchpad.net/libmemcached/+download&#34;&gt;最新のソース&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;# cd /usr/local/src
# wget https://launchpad.net/libmemcached/1.0/1.0.18/+download/libmemcached-1.0.18.tar.gz
# tar xvzf libmemcached-1.0.18.tar.gz
# ./configure
# make
# make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/etc/sysconfig/memcached&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;PORT=&amp;quot;11211&amp;quot;
USER=&amp;quot;apache&amp;quot;
MAXCONN=&amp;quot;1024&amp;quot;
CACHESIZE=&amp;quot;64&amp;quot;
OPTIONS=&amp;quot;&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;phpで使うために以下の設定:903ff49946c18317e229ef4fb1b593c4&#34;&gt;PHPで使うために以下の設定&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# yum install -y php-pecl-memcached
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PHP Extensionのインストール&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# git clone https://github.com/php-memcached-dev/php-memcached.git
# cd php-memcached
# phpize
# ./configure --with-libmemcached-dir=/usr/local
# make
# make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PHPで設定が有効になっているか確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ php -i | grep memcached

memcached
memcached support =&amp;gt; enabled
libmemcached version =&amp;gt; 1.0.18
memcached.compression_factor =&amp;gt; 1.3 =&amp;gt; 1.3
memcached.compression_threshold =&amp;gt; 2000 =&amp;gt; 2000
memcached.compression_type =&amp;gt; fastlz =&amp;gt; fastlz
memcached.serializer =&amp;gt; php =&amp;gt; php
memcached.sess_binary =&amp;gt; 0 =&amp;gt; 0
memcached.sess_connect_timeout =&amp;gt; 1000 =&amp;gt; 1000
memcached.sess_consistent_hash =&amp;gt; 0 =&amp;gt; 0
memcached.sess_lock_expire =&amp;gt; 0 =&amp;gt; 0
memcached.sess_lock_max_wait =&amp;gt; 0 =&amp;gt; 0
memcached.sess_lock_wait =&amp;gt; 150000 =&amp;gt; 150000
memcached.sess_locking =&amp;gt; 1 =&amp;gt; 1
memcached.sess_number_of_replicas =&amp;gt; 0 =&amp;gt; 0
memcached.sess_prefix =&amp;gt; memc.sess.key. =&amp;gt; memc.sess.key.
memcached.sess_randomize_replica_read =&amp;gt; 0 =&amp;gt; 0
memcached.sess_remove_failed =&amp;gt; 0 =&amp;gt; 0
memcached.sess_sasl_password =&amp;gt; no value =&amp;gt; no value
memcached.sess_sasl_username =&amp;gt; no value =&amp;gt; no value
memcached.store_retry_count =&amp;gt; 2 =&amp;gt; 2
memcached.use_sasl =&amp;gt; 0 =&amp;gt; 0
Registered save handlers =&amp;gt; files user memcached
PWD =&amp;gt; /tmp/php-memcached
_SERVER[&amp;quot;PWD&amp;quot;] =&amp;gt; /tmp/php-memcached
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;起動&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# /etc/init.d/memcached start
# /etc/init.d/httpd restart

ps auxwww|grep mem
apache   24255  0.0  0.0 330844   988 ?        Ssl  18:04   0:00 memcached -d -p 11211 -u apache -m 64 -c 1024 -P /var/run/memcached/memcached.pid
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;memcachedに保存されている情報の確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ memcached-tool localhost display
$ memcached-tool localhost dump | strings
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/modified/20130107/1357553481&#34;&gt;memcached のインストール。作業メモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://9ensan.com/blog/programming/php/fuelphp-cache-memcached/&#34;&gt;FuelPHPのキャッシュライブラリ – memcached編&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://takashi-kun.hatenablog.com/entry/2013/11/23/031343&#34;&gt;PHPのMemcachedモジュールをインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://c-brains.jp/blog/wsg/10/07/30-105035.php&#34;&gt;memcached の中身を確認するなら memcached-tool コマンド&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://colopl.co.jp/tech/blog/2012/06/1877/&#34;&gt;Memcached の key 一覧を取得するまでの過程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/masayuki14/touch/20120710/1341877792&#34;&gt;PHPでmemcachedを使うときのモジュールパフォーマンス比較&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://l-w-i.net/t/memcached/command_001.txt&#34;&gt;memcachedコマンド一覧&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;お疲れ様でした。&lt;/p&gt;

&lt;h4 id=&#34;関連する記事:903ff49946c18317e229ef4fb1b593c4&#34;&gt;関連する記事&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.10rane.com/2014/07/29/install-deamontools/&#34;&gt;deamontoolsのインストール&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>daemontoolsのインストール</title>
      <link>http://tatsuyano.github.io/2014/07/29/install-daemontools/</link>
      <pubDate>Tue, 29 Jul 2014 03:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2014/07/29/install-daemontools/</guid>
      <description>

&lt;p&gt;ダウンロード&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mkdir -p /package
# chmod 1755 /package
# cd /package

# wget http://cr.yp.to/daemontools/daemontools-0.76.tar.gz
# tar zxvf daemontools-0.76.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストールスクリプトの修正&lt;/p&gt;

&lt;p&gt;/package/admin/daemontools-0.76/src/conf-cc&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gcc -O2 -Wimplicit -Wunused -Wcomment -Wchar-subscripts -Wuninitialized -Wshadow -Wcast-qual -Wcast-align -Wwrite-strings #&amp;lt;- 削除
gcc -O2 --include /usr/include/errno.h #&amp;lt;-書き換え
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストール&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# cd /admin/daemontools-0.76
# /package/install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;daemontools本体の起動設定
/etc/init/svscan.conf&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;start on runlevel [12345]
respawn
exec /usr/local/bin/svscanboot
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://itochin2.hatenablog.com/entry/2014/01/26/151224&#34;&gt;CentOS6.4にmemcachedを入れた。&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://gihyo.jp/dev/feature/01/memcached/0005?page=1&#34;&gt;memcachedの運用と互換アプリケーション&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.unixuser.org/~euske/doc/daemontools/myfaq/faq-3.html&#34;&gt;私家版 daemontools FAQ) 3. トラブルシューティング&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;daemontoolsのコマンド:862733573a98f4e98da780723d159505&#34;&gt;daemontoolsのコマンド&lt;/h4&gt;

&lt;p&gt;ややこしいのですが、実際のコマンドは、&lt;code&gt;/package/admin/daemontools/command&lt;/code&gt;にあります。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/usr/local/bin&lt;/code&gt; =&amp;gt; &lt;code&gt;/command&lt;/code&gt; =&amp;gt; &lt;code&gt;/package.../command&lt;/code&gt;&lt;br /&gt;
の順番にシンボリックリンクが貼ってあります。&lt;/p&gt;

&lt;h3 id=&#34;監視用スクリプトの作成:862733573a98f4e98da780723d159505&#34;&gt;監視用スクリプトの作成&lt;/h3&gt;

&lt;p&gt;memcachedを監視するためのスクリプトを作成します。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# chmod +x /var/memcached/run
# ln -s /var/memcached /service/memcached
# /etc/init.d/memcached stop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/var/memcached/run&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh

if [ -f /etc/sysconfig/memcached ];then
        . /etc/sysconfig/memcached
fi

exec 2&amp;gt;&amp;amp;1
exec /usr/bin/memcached -p $PORT -u $USER  -m $CACHESIZE -c $MAXCONN
$OPTIONS
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;daemontoolsの起動&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sh -c &#39;svscan /service &amp;amp;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;daemontoolsを起動すると、監視対象のmemcachedが起動されます。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# ps aux|grep [m]em
root     10011  0.0  0.0   4048   348 ?        S    07:52   0:00 supervise memcached
apache   10012  0.0  0.1 316772  1104 ?        Sl   07:52   0:00 /usr/bin/memcached -p 11211 -u apache -m 64 -c 1024
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;daemontoolsのコマンド-1:862733573a98f4e98da780723d159505&#34;&gt;daemontoolsのコマンド&lt;/h3&gt;

&lt;p&gt;監視対象の起動、停止&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# svc -d /service/memcached   #=&amp;gt; down
# svc -u /service/memcached   #=&amp;gt; up
# svc -t /service/memcached   #=&amp;gt; restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;状態の確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;svstat /service/memcached
 /service/memcached: down 216 seconds, normally up
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;お疲れ様でした。&lt;/p&gt;

&lt;h4 id=&#34;関連する記事:862733573a98f4e98da780723d159505&#34;&gt;関連する記事&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.10rane.com/2014/07/29/install-memcached/&#34;&gt;memcachedのインストール&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>fuelphpでredisを使う</title>
      <link>http://tatsuyano.github.io/2014/07/28/use-the-redis-in-fuelphp/</link>
      <pubDate>Mon, 28 Jul 2014 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2014/07/28/use-the-redis-in-fuelphp/</guid>
      <description>

&lt;p&gt;まずはredisのインストールから&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ yum --enablerepo=epel install -y redis
$ /etc/init.d/redis start
redis-server を起動中:                                  [  OK  ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;confの場所&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ emacs /etc/redis.conf
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;redisが正常にインストールされているか確認&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ redis-cli
redis 127.0.0.1:6379&amp;gt; set name &#39;hoge&#39;
OK
redis 127.0.0.1:6379&amp;gt; get name
&amp;quot;hoge&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;保存されているKEYを表示&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ redis-cli

redis 127.0.0.1:6379&amp;gt; KEYS *
1) &amp;quot;particles&amp;quot;
2) &amp;quot;name&amp;quot;
redis 127.0.0.1:6379&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;fuelphpの設定:e4a364e23391fc6a82f3c0ef76f3e375&#34;&gt;fuelphpの設定&lt;/h4&gt;

&lt;p&gt;config/db.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;redis&#39; =&amp;gt; array(
    &#39;default&#39; =&amp;gt; array(
    &#39;hostname&#39; =&amp;gt; &#39;127.0.0.1&#39;,
    &#39;port&#39;     =&amp;gt; 6379
  )
),
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;config.session.php&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;driver&#39; =&amp;gt; &#39;redis&#39;,
....
// specific configuration settings for redis based sessions
&#39;redis&#39; =&amp;gt; array(
  &#39;cookie_name&#39; =&amp;gt; &#39;fuelrid&#39;, // name of the session cookie 
  &#39;database&#39;    =&amp;gt; &#39;default&#39;  // name of the redis database to use
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;参考サイト:e4a364e23391fc6a82f3c0ef76f3e375&#34;&gt;参考サイト&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://konboi.hatenablog.com/entry/2013/03/05/155107&#34;&gt;redisサーバー構築メモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://w.koshigoe.jp/study/?%5BKVS%5D%5BRedis%5D+Redis+%A5%B3%A5%DE%A5%F3%A5%C9%B0%EC%CD%F7&#34;&gt;KOSHIGOE学習帳 - [KVS][Redis] Redis コマンド一覧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fuelphp.jp/docs/1.7/classes/redis.html&#34;&gt;Redis_Db クラス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://btt.hatenablog.com/entry/2012/06/28/004230&#34;&gt;FuelPHPでRedisを使用する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/akishin999/20130607/1370580692&#34;&gt;Redis でお手軽に複数台構成の検証環境を作る&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;関連する記事:e4a364e23391fc6a82f3c0ef76f3e375&#34;&gt;関連する記事&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.10rane.com/2014/07/29/fuelphp-use-agent-class/&#34;&gt;fuelphpでAgentClassを設定する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.10rane.com/2014/07/29/fuelphp-validation/&#34;&gt;fuelphpのエラー文言を日本語化する&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HandlerSocketをインストールする</title>
      <link>http://tatsuyano.github.io/2013/06/10/handlersocket-install/</link>
      <pubDate>Mon, 10 Jun 2013 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2013/06/10/handlersocket-install/</guid>
      <description>

&lt;h2 id=&#34;インストールする内容:70ecf40fc52ac5a33c486956612d2368&#34;&gt;インストールする内容&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;rpm版 MySQL 5.1.68&lt;/li&gt;
&lt;li&gt;HandlerSocket-Plugin-for-MySQL 最新版(2013/06/05)&lt;/li&gt;
&lt;li&gt;php-handlersocket 0.3.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;作業の流れ:70ecf40fc52ac5a33c486956612d2368&#34;&gt;作業の流れ&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;すでにyumでインストールしてあるMySQLの削除&lt;/li&gt;
&lt;li&gt;MySQL(rpm版)のインストール&lt;/li&gt;
&lt;li&gt;Handler Socketのインストール&lt;/li&gt;
&lt;li&gt;php-handlersocketのインストール&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;すでにyumでインストールしてあるmysqlの削除:70ecf40fc52ac5a33c486956612d2368&#34;&gt;すでにyumでインストールしてあるMySQLの削除&lt;/h2&gt;

&lt;p&gt;前にテスト導入で成功したバージョンにあわせるため、yumでインストールしたMySQLを削除&lt;/p&gt;

&lt;h3 id=&#34;インストール済みのmysqlを確認:70ecf40fc52ac5a33c486956612d2368&#34;&gt;インストール済みのMySQLを確認&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum list installed | grep mysql
mysql.x86_64            5.1.69-1.el6_4  @updates
mysql-libs.x86_64       5.1.69-1.el6_4  @updates
mysql-server.x86_64     5.1.69-1.el6_4  @updates
php-mysql.x86_64        5.3.3-22.el6    @base
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;chkconfigからmysqldをoff:70ecf40fc52ac5a33c486956612d2368&#34;&gt;chkconfigからmysqldをoff&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;chkconfig --list mysqld
mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off

chkconfig mysqld off
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;yumでインストールしたmysqlを削除:70ecf40fc52ac5a33c486956612d2368&#34;&gt;yumでインストールしたMySQLを削除&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum -y remove mysql mysql-server mysql-libs
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mysql-rpm版-のインストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;MySQL(rpm版)のインストール&lt;/h2&gt;

&lt;p&gt;過去にインストールしたmysqlのバージョンは5.1.66 だったが見つからなかったので、&lt;br /&gt;
近いバージョンの5.1.68をインストールすることにした。&lt;/p&gt;

&lt;h3 id=&#34;インストール先のディレクトリ作成:70ecf40fc52ac5a33c486956612d2368&#34;&gt;インストール先のディレクトリ作成&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /usr/src/redhat/RPMS/x86_64/
cd /usr/src/redhat/
mkdir BUILD SOURCES SPECS SRPMS
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;rpmファイルのダウンロード:70ecf40fc52ac5a33c486956612d2368&#34;&gt;rpmファイルのダウンロード&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/src/redhat/RPMS/x86_64/
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-client-community-5.1.68-1.rhel5.x86_64.rpm
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-server-community-5.1.68-1.rhel5.x86_64.rpm
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-devel-community-5.1.68-1.rhel5.x86_64.rpm
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-shared-community-5.1.68-1.rhel5.x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;インストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;インストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;rpm -ivh MySQL*.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;インストールの確認:70ecf40fc52ac5a33c486956612d2368&#34;&gt;インストールの確認&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/mysql start
/usr/bin/mysql -uroot
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;handler-socketのインストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;Handler Socketのインストール&lt;/h2&gt;

&lt;p&gt;Handler Socketをインストールするには、MySQLのソース版とgitが必要。&lt;/p&gt;

&lt;h3 id=&#34;起動中のmysqlを停止させる-念のため:70ecf40fc52ac5a33c486956612d2368&#34;&gt;起動中のMySQLを停止させる(念のため)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/mysql stop
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mysqlのソース版をダウンロード:70ecf40fc52ac5a33c486956612d2368&#34;&gt;MySQLのソース版をダウンロード&lt;/h3&gt;

&lt;p&gt;ダウンロードするソースは、先ほどインストールしたMySQL 5.1.68と合わせること。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/src/redhat/SRPMS/
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-community-5.1.68-1.rhel5.src.rpm
rpm -ivh MySQL-community-5.1.68-1.rhel5.src.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/src/redhat/SOURCES/
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/mysql-5.1.68.tar.gz
tar xvzf mysql-5.1.68.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;必要なライブラリなどをyumでインストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;必要なライブラリなどをyumでインストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum -y install libtool gcc gcc-c++ openssl-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;handlersocket-plugin-for-mysqlをダウンロード-git-clone:70ecf40fc52ac5a33c486956612d2368&#34;&gt;HandlerSocket-Plugin-for-MySQLをダウンロード(git clone)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp/
git clone git://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-and-make-install:70ecf40fc52ac5a33c486956612d2368&#34;&gt;configure and make install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp/HandlerSocket-Plugin-for-MySQL/

./autogen.sh

./configure \
--with-mysql-source=/usr/src/redhat/SOURCES/mysql-5.1.68 \
--with-mysql-bindir=/usr/bin \
--with-mysql-plugindir=/usr/lib64/mysql/plugin
make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;with-mysql-source&amp;hellip;.. MySQLのソースコードのトップディレクトリを指定します。&lt;/li&gt;
&lt;li&gt;with-mysql-bindir&amp;hellip;.. インストール済みのMySQLのmysql_configコマンドが有るディレクトリを指定します。&amp;rdquo;which mysql_config&amp;rdquo;で調べます。&lt;/li&gt;
&lt;li&gt;with-mysql-plugindir.. MySQLのpluginディレクトリを指定します。以下のコマンドで確認できます。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/src/redhat/RPMS/x86_64/
rpm -ql MySQL-server-community-5.1.68-1.rhel5 | grep plugin
/usr/lib64/mysql/plugin/ha_innodb_plugin.so
/usr/lib64/mysql/plugin/ha_innodb_plugin.so.0
/usr/lib64/mysql/plugin/ha_innodb_plugin.so.0.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-時の注意:70ecf40fc52ac5a33c486956612d2368&#34;&gt;configure 時の注意&lt;/h3&gt;

&lt;p&gt;自分は &amp;ndash;with-mysql-plugindirのパスを間違えて、&lt;br /&gt;
&amp;ndash;with-mysql-plugindir=/usr/lib64/mysql/plugin ではなく、&lt;br /&gt;
&amp;ndash;with-mysql-plugindir=/usr/lib/mysql/plugin で指定したために、&lt;br /&gt;
「libtool: link: only absolute run-paths are allowed」とうエラーが出てしまいうまくいかなった。&lt;br /&gt;
うまくいかないときは、一度 make clean して再度 configure のパラメータを確認すること。&lt;/p&gt;

&lt;h3 id=&#34;handlersocketのpluginが入っているか-インストールがうまくいっているかの-確認:70ecf40fc52ac5a33c486956612d2368&#34;&gt;handlersocketのpluginが入っているか(インストールがうまくいっているかの)確認&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ll /usr/lib64/mysql/plugin/handlersocket*
-rw-r--r-- 1 root root  3519732  6月  7 10:16 2013 handlersocket.a
-rwxr-xr-x 1 root root      972  6月  7 10:16 2013 handlersocket.la
lrwxrwxrwx 1 root root       22  6月  7 10:16 2013 handlersocket.so -&amp;gt; handlersocket.so.0.0.0
lrwxrwxrwx 1 root root       22  6月  7 10:16 2013 handlersocket.so.0 -&amp;gt; handlersocket.so.0.0.0
-rwxr-xr-x 1 root root  1708138  6月  7 10:16 2013 handlersocket.so.0.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pluginのインストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;pluginのインストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/mysql start
mysql -uroot;

mysql&amp;gt; install plugin handlersocket soname &#39;handlersocket.so&#39;;
mysql&amp;gt; show plugin;
+---------------+----------+----------------+------------------+---------+
| Name          | Status   | Type           | Library          | License |
+---------------+----------+----------------+------------------+---------+
| binlog        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| partition     | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| ARCHIVE       | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| BLACKHOLE     | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| CSV           | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| FEDERATED     | DISABLED | STORAGE ENGINE | NULL             | GPL     |
| MEMORY        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| InnoDB        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| MyISAM        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| MRG_MYISAM    | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| handlersocket | ACTIVE   | DAEMON         | handlersocket.so | BSD     |
+---------------+----------+----------------+------------------+---------+
11 rows in set, 1 warning (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;my-cnf-の設定:70ecf40fc52ac5a33c486956612d2368&#34;&gt;my.cnf の設定&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/mysql stop
cat &amp;gt; /etc/my.cnf
[mysqld]
handlersocket_port =    9998 # handlersocketが接続を受け付けるポート(参照系リクエスト用)
handlersocket_port_wr = 9999 # handlersocketが接続を受け付けるポート(更新系リクエスト用)
handlersocket_address =      # handlersocketがバインドするアドレス(空のままでOK)
handlersocket_verbose = 0    # デバッグ用
handlersocket_timeout = 300  # 通信タイムアウト(秒)
handlersocket_threads = 16   # handlersocketのワーカースレッド数
thread_concurrency = 128     # handlersocketが幾つかのスレッドを占有するため、大きめの値を指定してください
open_files_limit = 65535

/etc/init.d/mysql start
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;php-handlersocketのインストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;php-handlersocketのインストール&lt;/h2&gt;

&lt;h3 id=&#34;ソースのダウンロード:70ecf40fc52ac5a33c486956612d2368&#34;&gt;ソースのダウンロード&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp/
wget https://php-handlersocket.googlecode.com/files/php-handlersocket-0.3.1.tar.gz
tar xvzf php-handlersocket-0.3.1.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-and-make-install-1:70ecf40fc52ac5a33c486956612d2368&#34;&gt;configure and make install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd handlersocket
phpize
./configure
make
make install
Installing shared extensions:     /usr/lib64/php/modules/
Installing header files:          /usr/include/php/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;php-iniへ追加-httpdの再起動:70ecf40fc52ac5a33c486956612d2368&#34;&gt;php.iniへ追加、httpdの再起動&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;extension=handlersocket.so&amp;quot; &amp;gt; /etc/php.d/hs.ini
/etc/init.d/httpd restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;php.iniへの追加を行わなかったために、Class not found になってしまった。&lt;br /&gt;
PHP Fatal error:  Class &amp;lsquo;HandlerSocket&amp;rsquo; not found in /tmp/handlersocket/examples/example.php on line 12&lt;br /&gt;
モジュールをインストール後は、/etc/php.d/以下に設定ファイルを配置し、httpdを再起動する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/items/540fd2ecdc98a7549fcb&#34;&gt;AWS EC2にhandlersocketを入れるまで&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;php-handlersocketのインストール確認:70ecf40fc52ac5a33c486956612d2368&#34;&gt;php-handlersocketのインストール確認&lt;/h3&gt;

&lt;p&gt;まずはphpinfo.phpを確認する。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;handlersocket&lt;br /&gt;
MySQL HandlerSocket support enabled&lt;br /&gt;
extension Version           0.3.1&lt;br /&gt;
hsclient Library Support    enabled&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;exsampleを動かし-最終確認:70ecf40fc52ac5a33c486956612d2368&#34;&gt;exsampleを動かし、最終確認&lt;/h3&gt;

&lt;p&gt;handlersocketに付属しているexamplesを実行し最終確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp/handlersocket/examples/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テスト用のDB、テーブルを作成し、6件ほどレコードをinsertする&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;emacs development.ja.php

CREATE DATABASE hstestdb;

CREATE TABLE hstesttbl (
  k varchar(30) PRIMARY KEY,
  v varchar(30) NOT NULL,
  f1 varchar(30),
  f2 varchar(30)
) Engine = innodb;

CREATE INDEX i1 ON hstesttbl(v, k);
INSERT INTO hstesttbl VALUES (&#39;k1&#39;, &#39;v1&#39;, &#39;f1&#39;, &#39;f2&#39;);
INSERT INTO hstesttbl VALUES (&#39;k2&#39;, &#39;v2&#39;, &#39;f2&#39;, NULL);
INSERT INTO hstesttbl VALUES (&#39;k3&#39;, &#39;v3&#39;, &#39;f3&#39;, &#39;&#39;);
INSERT INTO hstesttbl VALUES (&#39;k4&#39;, &#39;v4&#39;, &#39;f4&#39;, &#39;f24&#39;);
INSERT INTO hstesttbl VALUES (&#39;k5&#39;, &#39;v5&#39;, &#39;f5&#39;, NULL);
INSERT INTO hstesttbl VALUES (&#39;k6&#39;, &#39;v6&#39;, &#39;f6&#39;, &#39;&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;php example.php
&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;
array(1) {
  [0]=&amp;gt;
  array(2) {
    [0]=&amp;gt;
    string(2) &amp;ldquo;k1&amp;rdquo;
    [1]=&amp;gt;
    string(2) &amp;ldquo;v1&amp;rdquo;
   }
}
array(1) {
  [0]=&amp;gt;
  array(2) {
    [0]=&amp;gt;
    string(2) &amp;ldquo;k2&amp;rdquo;
    [1]=&amp;gt;
    string(2) &amp;ldquo;v2&amp;rdquo;
   }
}
bool(false)
56:op:
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;h2 id=&#34;参考サイト:70ecf40fc52ac5a33c486956612d2368&#34;&gt;参考サイト&lt;/h2&gt;

&lt;p&gt;以下のサイトを参考にさせていただきました。ありがとうございます！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://kotaroito.hatenablog.com/entry/20111213/1323755054&#34;&gt;CentOSにMySQLとHandler Socketを入れてみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://akitosblog.seesaa.net/article/193127939.html&#34;&gt;Akito&amp;rsquo;s IT技術 メモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL&#34;&gt;HandlerSocket-Plugin-for-MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.google.com/p/php-handlersocket/&#34;&gt;php handler socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/akirahiguchi/handlersocket-etc-20110906&#34;&gt;HandlerSocket について + a&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>