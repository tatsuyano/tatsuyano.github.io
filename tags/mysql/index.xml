<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mysql on blog.10rane.com</title>
    <link>http://tatsuyano.github.io/tags/mysql/</link>
    <description>Recent content in Mysql on blog.10rane.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 28 Jul 2014 03:00:00 +0900</lastBuildDate>
    <atom:link href="http://tatsuyano.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>mysqlを5.1-&gt;5.6に再インストールする</title>
      <link>http://tatsuyano.github.io/2014/07/28/reinstall-mysql56/</link>
      <pubDate>Mon, 28 Jul 2014 03:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2014/07/28/reinstall-mysql56/</guid>
      <description>

&lt;p&gt;CentOS6の標準のyumでMysqlをインストールすると、バージョンが5.1だったので、再度yumで5.6を入れなおす。&lt;/p&gt;

&lt;h3 id=&#34;mysql5-6の性能:4a3d2890074119b8e4386ccd19b01070&#34;&gt;mysql5.6の性能&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://thinkit.co.jp/story/2013/11/19/4670&#34;&gt;MySQL 5.6での機能強化点 - パフォーマンスと使い勝手を大きく向上&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://nippondanji.blogspot.jp/2012/10/mysql-56.html&#34;&gt;開発スピードアクセル全開ぶっちぎり！日本よ、これがMySQL 5.6だッ！！&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/hirose31/20121003/134924992&#34;&gt;MySQL 5.1-&amp;gt;5.6のmy.cnfの差分とか&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;yumでインストールしたmysqlのパッケージの確認:4a3d2890074119b8e4386ccd19b01070&#34;&gt;yumでインストールしたmysqlのパッケージの確認&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;$ rpm -qa | grep mysql
mysql-libs-5.1.73-3.el6_5.x86_64
mysql-server-5.1.73-3.el6_5.x86_64
php-mysqlnd-5.5.10-1.el6.remi.1.x86_64 # &amp;lt;- これはphp5.5のパッケージ
mysql-5.1.73-3.el6_5.x86_64
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;依存関係の解消:4a3d2890074119b8e4386ccd19b01070&#34;&gt;依存関係の解消&lt;/h3&gt;

&lt;p&gt;ただmysql-libsはcronやpostfixが使用しているため、先に依存関係を解消する必要がある&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ wget ftp://ftp.jaist.ac.jp/pub/mysql//Downloads/MySQL-5.6/MySQL-shared-compat-5.6.17-1.el6.x86_64.rpm

$ rpm -Uvh MySQL-shared-compat-5.6.17-1.el6.x86_64.rpm
準備中...                ########################################### [100%]
1:MySQL-shared-compat    ########################################### [100%]
警告: /etc/my.cnf は /etc/my.cnf.rpmsave として保存されました。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;MySQL-shared-compatは、mysql-libsと同等のライブラリを提供し、mysql-libsを置き換えてくれる&lt;/p&gt;

&lt;h3 id=&#34;パッケージの削除:4a3d2890074119b8e4386ccd19b01070&#34;&gt;パッケージの削除&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum remove mysql*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;削除されたパッケージ&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;==========================
Package
=========================
Removing:
  mysql
  mysql-community-release
  mysql-server

Transaction Summary
==========================
Remove        3 Package(s)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.kakiro-web.com/linux/mysql-install.html&#34;&gt;CentOS6.5 64bitにMySQL5.6.17をRPMからインストール&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;mysql5-6用のrpmを追加し-再度インストールする:4a3d2890074119b8e4386ccd19b01070&#34;&gt;mysql5.6用のrpmを追加し、再度インストールする&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum install http://dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm
yum install mysql mysql-devel mysql-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;インストールされたパッケージ&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ rpm -qa | grep mysql
mysql-community-server-5.6.19-2.el6.x86_64
mysql-community-release-el6-5.noarch
php-mysqlnd-5.5.10-1.el6.remi.1.x86_64
mysql-community-common-5.6.19-2.el6.x86_64
mysql-community-client-5.6.19-2.el6.x86_64
mysql-community-devel-5.6.19-2.el6.x86_64
mysql-community-libs-5.6.19-2.el6.x86_64
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ybbo.net/2014/01/22/%E3%80%90%E3%82%B7%E3%83%B3%E3%83%97%E3%83%AB%E3%80%91centos6%E3%81%ABmysql5-6%E3%82%92yum%E3%81%A7%E7%B0%A1%E5%8D%98%E3%81%AB%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/&#34;&gt;CentOS6にMySQL5.6をyumで簡単にインストールする手順&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;create-table-でsqlエラーが出る:4a3d2890074119b8e4386ccd19b01070&#34;&gt;create table でSQLエラーが出る&lt;/h3&gt;

&lt;p&gt;Mysql5.6から、インストール時に強制的にsql_modeを設定するになった関係で、今まで動いていたSQLがエラーになる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;BLOB/TEXT column &#39;hoge&#39; can&#39;t have a default value
Field &#39;updated_at&#39; doesn&#39;t have a default value
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この&lt;code&gt;STRICT_TRANS_TABLES&lt;/code&gt;が有効になっていると、text型やdatetime型に初期値を設定しているとエラーになる模様&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mysql -uroot -e &#39;SELECT @@GLOBAL.sql_mode;&#39;
+--------------------------------------------+
| @@GLOBAL.sql_mode                          |
+--------------------------------------------+
| STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION |
+--------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;sql-modeの設定を変える:4a3d2890074119b8e4386ccd19b01070&#34;&gt;sql_modeの設定を変える&lt;/h3&gt;

&lt;p&gt;/etc/my.cnf&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Recommended in standard MySQL setup
sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;この部分をコメントアウトし、mysqlを再起動すると、sql_modeが変更された&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# mysql -uroot -e &#39;SELECT @@GLOBAL.sql_mode;&#39;
+------------------------+
| @@GLOBAL.sql_mode      |
+------------------------+
| NO_ENGINE_SUBSTITUTION |
+------------------------+
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コメントアウトしたのに、なぜ&lt;code&gt;NO_ENGINE_SUBSTITUTION&lt;/code&gt;が消えないのか不思議だ(別の場所にもmy.cnfがあるのだろう)が、
とりあえずこれでエラーがでなくなる。&lt;/p&gt;

&lt;p&gt;ちなみに、sql_modeの設定をナシにしたい場合は、下記のように設定する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# Recommended in standard MySQL setup
sql_mode=&#39;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/oranie/20130402/1364906656&#34;&gt;MySQL5.6で今までのVerでは問題無かったSQL文がエラーになった場合の対処法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/ozuma/20130323/1364002513&#34;&gt;CentOS 6.4にMySQL 5.5をrpmインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.seeds-std.co.jp/seedsblog/1035.html&#34;&gt;MySQL5.6にしていくつかのSQLでエラーが出るようになった&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>HandlerSocketをインストールする</title>
      <link>http://tatsuyano.github.io/2013/06/10/handlersocket-install/</link>
      <pubDate>Mon, 10 Jun 2013 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2013/06/10/handlersocket-install/</guid>
      <description>

&lt;h2 id=&#34;インストールする内容:70ecf40fc52ac5a33c486956612d2368&#34;&gt;インストールする内容&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;rpm版 MySQL 5.1.68&lt;/li&gt;
&lt;li&gt;HandlerSocket-Plugin-for-MySQL 最新版(2013/06/05)&lt;/li&gt;
&lt;li&gt;php-handlersocket 0.3.1&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;作業の流れ:70ecf40fc52ac5a33c486956612d2368&#34;&gt;作業の流れ&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;すでにyumでインストールしてあるMySQLの削除&lt;/li&gt;
&lt;li&gt;MySQL(rpm版)のインストール&lt;/li&gt;
&lt;li&gt;Handler Socketのインストール&lt;/li&gt;
&lt;li&gt;php-handlersocketのインストール&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;すでにyumでインストールしてあるmysqlの削除:70ecf40fc52ac5a33c486956612d2368&#34;&gt;すでにyumでインストールしてあるMySQLの削除&lt;/h2&gt;

&lt;p&gt;前にテスト導入で成功したバージョンにあわせるため、yumでインストールしたMySQLを削除&lt;/p&gt;

&lt;h3 id=&#34;インストール済みのmysqlを確認:70ecf40fc52ac5a33c486956612d2368&#34;&gt;インストール済みのMySQLを確認&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum list installed | grep mysql
mysql.x86_64            5.1.69-1.el6_4  @updates
mysql-libs.x86_64       5.1.69-1.el6_4  @updates
mysql-server.x86_64     5.1.69-1.el6_4  @updates
php-mysql.x86_64        5.3.3-22.el6    @base
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;chkconfigからmysqldをoff:70ecf40fc52ac5a33c486956612d2368&#34;&gt;chkconfigからmysqldをoff&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;chkconfig --list mysqld
mysqld          0:off   1:off   2:on    3:on    4:on    5:on    6:off

chkconfig mysqld off
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;yumでインストールしたmysqlを削除:70ecf40fc52ac5a33c486956612d2368&#34;&gt;yumでインストールしたMySQLを削除&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum -y remove mysql mysql-server mysql-libs
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mysql-rpm版-のインストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;MySQL(rpm版)のインストール&lt;/h2&gt;

&lt;p&gt;過去にインストールしたmysqlのバージョンは5.1.66 だったが見つからなかったので、&lt;br /&gt;
近いバージョンの5.1.68をインストールすることにした。&lt;/p&gt;

&lt;h3 id=&#34;インストール先のディレクトリ作成:70ecf40fc52ac5a33c486956612d2368&#34;&gt;インストール先のディレクトリ作成&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /usr/src/redhat/RPMS/x86_64/
cd /usr/src/redhat/
mkdir BUILD SOURCES SPECS SRPMS
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;rpmファイルのダウンロード:70ecf40fc52ac5a33c486956612d2368&#34;&gt;rpmファイルのダウンロード&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/src/redhat/RPMS/x86_64/
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-client-community-5.1.68-1.rhel5.x86_64.rpm
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-server-community-5.1.68-1.rhel5.x86_64.rpm
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-devel-community-5.1.68-1.rhel5.x86_64.rpm
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-shared-community-5.1.68-1.rhel5.x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;インストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;インストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;rpm -ivh MySQL*.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;インストールの確認:70ecf40fc52ac5a33c486956612d2368&#34;&gt;インストールの確認&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/mysql start
/usr/bin/mysql -uroot
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;handler-socketのインストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;Handler Socketのインストール&lt;/h2&gt;

&lt;p&gt;Handler Socketをインストールするには、MySQLのソース版とgitが必要。&lt;/p&gt;

&lt;h3 id=&#34;起動中のmysqlを停止させる-念のため:70ecf40fc52ac5a33c486956612d2368&#34;&gt;起動中のMySQLを停止させる(念のため)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/mysql stop
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;mysqlのソース版をダウンロード:70ecf40fc52ac5a33c486956612d2368&#34;&gt;MySQLのソース版をダウンロード&lt;/h3&gt;

&lt;p&gt;ダウンロードするソースは、先ほどインストールしたMySQL 5.1.68と合わせること。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/src/redhat/SRPMS/
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/MySQL-community-5.1.68-1.rhel5.src.rpm
rpm -ivh MySQL-community-5.1.68-1.rhel5.src.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/src/redhat/SOURCES/
wget http://download.softagency.net/MySQL/Downloads/MySQL-5.1/mysql-5.1.68.tar.gz
tar xvzf mysql-5.1.68.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;必要なライブラリなどをyumでインストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;必要なライブラリなどをyumでインストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum -y install libtool gcc gcc-c++ openssl-devel
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;handlersocket-plugin-for-mysqlをダウンロード-git-clone:70ecf40fc52ac5a33c486956612d2368&#34;&gt;HandlerSocket-Plugin-for-MySQLをダウンロード(git clone)&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp/
git clone git://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL.git
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-and-make-install:70ecf40fc52ac5a33c486956612d2368&#34;&gt;configure and make install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp/HandlerSocket-Plugin-for-MySQL/

./autogen.sh

./configure \
--with-mysql-source=/usr/src/redhat/SOURCES/mysql-5.1.68 \
--with-mysql-bindir=/usr/bin \
--with-mysql-plugindir=/usr/lib64/mysql/plugin
make
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;with-mysql-source&amp;hellip;.. MySQLのソースコードのトップディレクトリを指定します。&lt;/li&gt;
&lt;li&gt;with-mysql-bindir&amp;hellip;.. インストール済みのMySQLのmysql_configコマンドが有るディレクトリを指定します。&amp;rdquo;which mysql_config&amp;rdquo;で調べます。&lt;/li&gt;
&lt;li&gt;with-mysql-plugindir.. MySQLのpluginディレクトリを指定します。以下のコマンドで確認できます。&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code&gt;cd /usr/src/redhat/RPMS/x86_64/
rpm -ql MySQL-server-community-5.1.68-1.rhel5 | grep plugin
/usr/lib64/mysql/plugin/ha_innodb_plugin.so
/usr/lib64/mysql/plugin/ha_innodb_plugin.so.0
/usr/lib64/mysql/plugin/ha_innodb_plugin.so.0.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-時の注意:70ecf40fc52ac5a33c486956612d2368&#34;&gt;configure 時の注意&lt;/h3&gt;

&lt;p&gt;自分は &amp;ndash;with-mysql-plugindirのパスを間違えて、&lt;br /&gt;
&amp;ndash;with-mysql-plugindir=/usr/lib64/mysql/plugin ではなく、&lt;br /&gt;
&amp;ndash;with-mysql-plugindir=/usr/lib/mysql/plugin で指定したために、&lt;br /&gt;
「libtool: link: only absolute run-paths are allowed」とうエラーが出てしまいうまくいかなった。&lt;br /&gt;
うまくいかないときは、一度 make clean して再度 configure のパラメータを確認すること。&lt;/p&gt;

&lt;h3 id=&#34;handlersocketのpluginが入っているか-インストールがうまくいっているかの-確認:70ecf40fc52ac5a33c486956612d2368&#34;&gt;handlersocketのpluginが入っているか(インストールがうまくいっているかの)確認&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;ll /usr/lib64/mysql/plugin/handlersocket*
-rw-r--r-- 1 root root  3519732  6月  7 10:16 2013 handlersocket.a
-rwxr-xr-x 1 root root      972  6月  7 10:16 2013 handlersocket.la
lrwxrwxrwx 1 root root       22  6月  7 10:16 2013 handlersocket.so -&amp;gt; handlersocket.so.0.0.0
lrwxrwxrwx 1 root root       22  6月  7 10:16 2013 handlersocket.so.0 -&amp;gt; handlersocket.so.0.0.0
-rwxr-xr-x 1 root root  1708138  6月  7 10:16 2013 handlersocket.so.0.0.0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;pluginのインストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;pluginのインストール&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/mysql start
mysql -uroot;

mysql&amp;gt; install plugin handlersocket soname &#39;handlersocket.so&#39;;
mysql&amp;gt; show plugin;
+---------------+----------+----------------+------------------+---------+
| Name          | Status   | Type           | Library          | License |
+---------------+----------+----------------+------------------+---------+
| binlog        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| partition     | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| ARCHIVE       | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| BLACKHOLE     | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| CSV           | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| FEDERATED     | DISABLED | STORAGE ENGINE | NULL             | GPL     |
| MEMORY        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| InnoDB        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| MyISAM        | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| MRG_MYISAM    | ACTIVE   | STORAGE ENGINE | NULL             | GPL     |
| handlersocket | ACTIVE   | DAEMON         | handlersocket.so | BSD     |
+---------------+----------+----------------+------------------+---------+
11 rows in set, 1 warning (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;my-cnf-の設定:70ecf40fc52ac5a33c486956612d2368&#34;&gt;my.cnf の設定&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/etc/init.d/mysql stop
cat &amp;gt; /etc/my.cnf
[mysqld]
handlersocket_port =    9998 # handlersocketが接続を受け付けるポート(参照系リクエスト用)
handlersocket_port_wr = 9999 # handlersocketが接続を受け付けるポート(更新系リクエスト用)
handlersocket_address =      # handlersocketがバインドするアドレス(空のままでOK)
handlersocket_verbose = 0    # デバッグ用
handlersocket_timeout = 300  # 通信タイムアウト(秒)
handlersocket_threads = 16   # handlersocketのワーカースレッド数
thread_concurrency = 128     # handlersocketが幾つかのスレッドを占有するため、大きめの値を指定してください
open_files_limit = 65535

/etc/init.d/mysql start
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;php-handlersocketのインストール:70ecf40fc52ac5a33c486956612d2368&#34;&gt;php-handlersocketのインストール&lt;/h2&gt;

&lt;h3 id=&#34;ソースのダウンロード:70ecf40fc52ac5a33c486956612d2368&#34;&gt;ソースのダウンロード&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp/
wget https://php-handlersocket.googlecode.com/files/php-handlersocket-0.3.1.tar.gz
tar xvzf php-handlersocket-0.3.1.tar.gz
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-and-make-install-1:70ecf40fc52ac5a33c486956612d2368&#34;&gt;configure and make install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;cd handlersocket
phpize
./configure
make
make install
Installing shared extensions:     /usr/lib64/php/modules/
Installing header files:          /usr/include/php/
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;php-iniへ追加-httpdの再起動:70ecf40fc52ac5a33c486956612d2368&#34;&gt;php.iniへ追加、httpdの再起動&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;extension=handlersocket.so&amp;quot; &amp;gt; /etc/php.d/hs.ini
/etc/init.d/httpd restart
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;php.iniへの追加を行わなかったために、Class not found になってしまった。&lt;br /&gt;
PHP Fatal error:  Class &amp;lsquo;HandlerSocket&amp;rsquo; not found in /tmp/handlersocket/examples/example.php on line 12&lt;br /&gt;
モジュールをインストール後は、/etc/php.d/以下に設定ファイルを配置し、httpdを再起動する。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qiita.com/items/540fd2ecdc98a7549fcb&#34;&gt;AWS EC2にhandlersocketを入れるまで&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;php-handlersocketのインストール確認:70ecf40fc52ac5a33c486956612d2368&#34;&gt;php-handlersocketのインストール確認&lt;/h3&gt;

&lt;p&gt;まずはphpinfo.phpを確認する。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;handlersocket&lt;br /&gt;
MySQL HandlerSocket support enabled&lt;br /&gt;
extension Version           0.3.1&lt;br /&gt;
hsclient Library Support    enabled&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;exsampleを動かし-最終確認:70ecf40fc52ac5a33c486956612d2368&#34;&gt;exsampleを動かし、最終確認&lt;/h3&gt;

&lt;p&gt;handlersocketに付属しているexamplesを実行し最終確認する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd /tmp/handlersocket/examples/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;テスト用のDB、テーブルを作成し、6件ほどレコードをinsertする&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;emacs development.ja.php

CREATE DATABASE hstestdb;

CREATE TABLE hstesttbl (
  k varchar(30) PRIMARY KEY,
  v varchar(30) NOT NULL,
  f1 varchar(30),
  f2 varchar(30)
) Engine = innodb;

CREATE INDEX i1 ON hstesttbl(v, k);
INSERT INTO hstesttbl VALUES (&#39;k1&#39;, &#39;v1&#39;, &#39;f1&#39;, &#39;f2&#39;);
INSERT INTO hstesttbl VALUES (&#39;k2&#39;, &#39;v2&#39;, &#39;f2&#39;, NULL);
INSERT INTO hstesttbl VALUES (&#39;k3&#39;, &#39;v3&#39;, &#39;f3&#39;, &#39;&#39;);
INSERT INTO hstesttbl VALUES (&#39;k4&#39;, &#39;v4&#39;, &#39;f4&#39;, &#39;f24&#39;);
INSERT INTO hstesttbl VALUES (&#39;k5&#39;, &#39;v5&#39;, &#39;f5&#39;, NULL);
INSERT INTO hstesttbl VALUES (&#39;k6&#39;, &#39;v6&#39;, &#39;f6&#39;, &#39;&#39;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;php example.php
&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;
array(1) {
  [0]=&amp;gt;
  array(2) {
    [0]=&amp;gt;
    string(2) &amp;ldquo;k1&amp;rdquo;
    [1]=&amp;gt;
    string(2) &amp;ldquo;v1&amp;rdquo;
   }
}
array(1) {
  [0]=&amp;gt;
  array(2) {
    [0]=&amp;gt;
    string(2) &amp;ldquo;k2&amp;rdquo;
    [1]=&amp;gt;
    string(2) &amp;ldquo;v2&amp;rdquo;
   }
}
bool(false)
56:op:
&lt;/code&gt;&lt;/pre&gt;&lt;/p&gt;

&lt;h2 id=&#34;参考サイト:70ecf40fc52ac5a33c486956612d2368&#34;&gt;参考サイト&lt;/h2&gt;

&lt;p&gt;以下のサイトを参考にさせていただきました。ありがとうございます！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://kotaroito.hatenablog.com/entry/20111213/1323755054&#34;&gt;CentOSにMySQLとHandler Socketを入れてみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://akitosblog.seesaa.net/article/193127939.html&#34;&gt;Akito&amp;rsquo;s IT技術 メモ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/ahiguti/HandlerSocket-Plugin-for-MySQL&#34;&gt;HandlerSocket-Plugin-for-MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://code.google.com/p/php-handlersocket/&#34;&gt;php handler socket&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/akirahiguchi/handlersocket-etc-20110906&#34;&gt;HandlerSocket について + a&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>MAMP環境でのCakePHPのmysql.sockの指定方法</title>
      <link>http://tatsuyano.github.io/2013/02/04/mamp-cakephp-mysql/</link>
      <pubDate>Mon, 04 Feb 2013 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2013/02/04/mamp-cakephp-mysql/</guid>
      <description>

&lt;h2 id=&#34;worning:3f05be670dddf031e8b273ab46ea1cc7&#34;&gt;worning&lt;/h2&gt;

&lt;p&gt;MacにMAMPをインストールし、CakePHPの「bakeコンソール」でModelクラスを作成したさいに、mysql.sockの指定箇所が違うよと警告された&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Warning Error: PDO::__construct(): [2002] No such file or directory (trying to connect via unix:///var/mysql/mysql.sock) in [/Applications/MAMP/htdocs/bake/lib/Cake/Model/Datasource/Database/Mysql.php, line 149]

Error: Database connection &amp;quot;SQLSTATE[HY000] [2002] No such file or directory&amp;quot; is missing, or could not be created.
#0 /Applications/MAMP/htdocs/bake/lib/Cake/Model/Datasource/DboSource.php(260): Mysql-&amp;gt;connect()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;MAMPを使っているので、mysql.sockは「/Applications/MAMP/tmp/mysql/mysql.sock」作成されている。&lt;br /&gt;
たぶん解決方法としては３つあって、&lt;br /&gt;
1.sockファイルをworiningに書いてある「/var/mysql/mysql.sock」に生成するようMysql側の設定をいじる。&lt;br /&gt;
2.「/var/mysql/mysql.sock」に「/Applications/MAMP/tmp/mysql/mysql.sock」のリンクを貼ってしまう。&lt;br /&gt;
3.たぶん「app/Config/database.php」に現在生成されているmysql.sockの場所を指定する。&lt;/p&gt;

&lt;p&gt;どう考えても「３」が正しいやり方だと思うけど、なかなかそれっぽい情報が引っかからなかったがやっとあった。&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://stackoverflow.com/questions/1688705/cakephp-console-bake-on-mac-os-with-mamp-database-connection-error&#34;&gt;Cakephp console (bake) on Mac OS with Mamp : database connection error&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;
public $default = array(
    &#39;datasource&#39; =&gt; &#39;Database/Mysql&#39;,
    &#39;persistent&#39; =&gt; false,
    &#39;host&#39; =&gt; &#39;localhost&#39;,
    &#39;login&#39; =&gt; &#39;USERNAME&#39;,
    &#39;password&#39; =&gt; &#39;PASSWORD&#39;,
    &#39;database&#39; =&gt; &#39;DATABASE&#39;,
    &#39;encoding&#39; =&gt; &#39;utf8&#39;,
    &#39;unix_socket&#39; =&gt; &#39;/Applications/MAMP/tmp/mysql/mysql.sock&#39; # &lt;- this
    );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.x系から、socketの指定がデフォルトと違う場合に上記のように設定する模様。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>cpanmでDBD::mysqlをインストールしようとすると、mysql.hがないと怒られる</title>
      <link>http://tatsuyano.github.io/2012/09/04/cpanm-dbd-mysql/</link>
      <pubDate>Tue, 04 Sep 2012 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2012/09/04/cpanm-dbd-mysql/</guid>
      <description>

&lt;h2 id=&#34;インストール:8a4d78145dafb1a26bc6d195a1e1eade&#34;&gt;インストール&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-perl&#34;&gt;cpanm DBD::mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;しようするとエラーが。。build.logを確認してみると&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;emacs .cpanm/build.log
...
dbdimp.h:24:49: error: mysql.h: そのようなファイルやディレクトリはありません
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;とのこと。ググったところ、「mysql.h」は「mysql-devel」に入っているらしいので、mysql-develをインストールし、再度 cpanm DBD::mysqlを実行。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo yum -y install mysql-devel
...
cpanm DBD::mysql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今度は&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;emacs .cpanm/build.log
...
make: *** [test_dynamic] エラー 255
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;エラーの原因がよくわからなかったので、再度で検索したところ、下記のサイトの方法で対応できました。&lt;br /&gt;
&lt;a href=&#34;http://shibayu36.hatenablog.com/entry/20100605/1275754485&#34;&gt;Mac OS XにDBD::mysqlをインストール&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd .cpanm/latest-build/DBD-mysql*
perl Makefile.PL --testuser=&#39;hoge&#39; --testpassword=&#39;piyo&#39;
make
make test
make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;mysqlの接続でしけていたんですね。勉強になりました。&lt;/p&gt;

&lt;h2 id=&#34;参考サイト:8a4d78145dafb1a26bc6d195a1e1eade&#34;&gt;参考サイト&lt;/h2&gt;

&lt;p&gt;以下のサイトを参考にさせていただきました。ありがとうございます！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://shibayu36.hatenablog.com/entry/20100605/1275754485&#34;&gt;Mac OS XにDBD::mysqlをインストール&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://d.hatena.ne.jp/eisenbach/20111019/1319021855&#34;&gt;Rails3の bundle install で mysql.h が見つからないというエラー&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>