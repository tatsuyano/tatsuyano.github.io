<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on blog.10rane.com</title>
    <link>http://tatsuyano.github.io/tags/nginx/</link>
    <description>Recent content in Nginx on blog.10rane.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 09 Sep 2014 01:00:00 +0900</lastBuildDate>
    
	<atom:link href="http://tatsuyano.github.io/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Amazon LinuxにGhostをインストールする</title>
      <link>http://tatsuyano.github.io/2014/09/09/how-to-install-and-setup-ghost-on-amazon-linux/</link>
      <pubDate>Tue, 09 Sep 2014 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2014/09/09/how-to-install-and-setup-ghost-on-amazon-linux/</guid>
      <description>新たにt2.microのインスタンスを立ち上げたので、Ghost を新規でインストールしようと思います。
Node.js のインストール anyenvを使って、0.10.0以上のNode.js をインストールしてください。
$ which node HOME/.anyenv/envs/ndenv/shims/node $ which npm $HOME/.anyenv/envs/ndenv/shims/npm $ node --version v0.10.26   anyenvをインストールする  nginx のインストール yumでのバージョンは1.4.7と少し古いですが、面倒なのでインストール
$ sudo yum -y install nginx $ /usr/sbin/nginx -v nginx version: nginx/1.4.7 $ sudo chkconfig nginx on $ sudo chkconfig --list | grep nginx nginx 0:off 1:off 2:on 3:on 4:on 5:on 6:off  念のため起動テスト
$ sudo /etc/init.d/nginx start  confの設定 特定のドメインのみを停止(切り離)したりするために、 設定ファイルのリンクを貼ったディレクトリをincludeします。
sites-availableにはドメインごとの設定ファイル、 sites-enabledには設定ファイルのリンクを貼ります。</description>
    </item>
    
    <item>
      <title>GhostにGoogle Analyticsに設置しアクセス元IPを取得する</title>
      <link>http://tatsuyano.github.io/2014/08/10/get-access-ip-installed-google-analytics-to-ghost/</link>
      <pubDate>Sun, 10 Aug 2014 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2014/08/10/get-access-ip-installed-google-analytics-to-ghost/</guid>
      <description>アクセス元IPを取得するには、Google Analyticsのデフォルト設定ではできません。 IPを取得、集計するには
 Google Analyticsにdimensionを設定し、アクセス元IPを集計できるようにする PHPを使って、blogの参照時のIPを取得する 取得したIPをdimensionに渡す 集計結果をGoogle Analyticsで参照できるよう、カスタムレポートを作成する  という手順で対応します。
この記事で紹介するシステム構成  CentOS6 Ghost Nginx  何はともあれ、まずはGoogleAnalyticsを導入してください。
 初心者必見！【Google Analytics(アナリティクス)】の導入と使い方 How to Add Google Analytics to Ghost  Google Analyticsにdimensionを設定し、アクセス元IPを集計できるようにする Analyticsが提供していない値(今回でいうところのアクセス元IP)を集計するには、dimension(変数)を設定し、その変数に値を代入することで、集計することができるようになります。
アナリティクス設定 &amp;gt; カスタム定義 &amp;gt; カスタム ディメンション 新しいカスタム ディメンション &amp;gt; カスタム ディメンションを編集 &amp;gt; 保存 保存するとdimension1という変数がAnalyticsに設定されます。
PHPを使って、blogが参照された時のIPを取得する このblogにはGhostを動かすための最小の設定しかしていなかったので、まずはNginx上でPHPが動く環境を整えます。
# yum -y install php php-fpm  次に、事前に用意したdomainをバーチャルホスト(VH)に割り振り、そのVHに対してPHPが動くように設定します。
/etc/nginx/conf.d/php.conf
```` server { listen 80; server_name ga.10rane.com;
location / { root /var/www/html; index index.</description>
    </item>
    
    <item>
      <title>nginxのファイルのアップロードサイズを変更する　413 Request Entity Too Large</title>
      <link>http://tatsuyano.github.io/2012/12/21/nginx-request-entity-too-large/</link>
      <pubDate>Fri, 21 Dec 2012 02:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2012/12/21/nginx-request-entity-too-large/</guid>
      <description>サイズの大きなファイルをアップロードしようとするとタイトルのエラーが出るので、その対処方法。
nginx.conf まずはnginx.confファイルに「client_max_body_size 20M;」を追加。
私はリバースプロキシを利用しているので、2箇所に記述。
server { listen 80; server_name blog.10rane.com; client_max_body_size 20M; # 413 Request Entity Too Large ..... server { listen 8080; server_name blog.10rane.com; client_max_body_size 20M; # 413 Request Entity Too Large .....  php.ini php.iniは3箇所の変更。
# emacs /etc/php.ini upload_max_filesize = 20M post_max_size = 20M memory_limit = 128M  再起動 nginx、fast-cgi両方を再起動。
/etc/init.d/nginx restart /etc/init.d/php-fastcgi restart  参考サイト 以下のサイトを参考にさせていただきました。ありがとうございます！
 nginx error – 413 Request Entity Too Large と出る場合は最大ファイルサイズを変更する FileをUploadするためのnginxとphp.</description>
    </item>
    
    <item>
      <title>nginxにBASIC認証とIP制限を入れる</title>
      <link>http://tatsuyano.github.io/2012/12/21/nginx-basic-authentication-limit-ip/</link>
      <pubDate>Fri, 21 Dec 2012 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2012/12/21/nginx-basic-authentication-limit-ip/</guid>
      <description> Basic認証 自分のホーム以下に.htpasswdファイルを配置するとうまく認証できませんでした。
なのであまりよくありませんが面倒なので、/etc/nginx配下で、かつパーミッションは777で。
cd /etc/nginx htpasswd -c /etc/nginx/.htpasswd hoge chmod 777 .htpasswd  emacs conf.d/vh_redmine.conf location / { .... auth_basic &amp;quot;Secret Area&amp;quot;; auth_basic_user_file &amp;quot;/etc/nginx/.htpasswd&amp;quot;; }  IP制限 上から順に設定が反映されるらしく、allowより前にdenyの設定を入れてしまうとallowが反映されないので注意。
server { .... allow xxx.xxx.xxx.xxx; deny all; }  再起動 /etc/init.d/nginx restart  参考サイト 以下のサイトを参考にさせていただきました。ありがとうございます！
 nginxでBasic認証を設定 Nginx で IPアドレスによるアクセス制限  </description>
    </item>
    
  </channel>
</rss>