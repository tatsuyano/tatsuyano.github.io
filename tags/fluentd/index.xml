<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Fluentd on blog.10rane.com</title>
    <link>http://tatsuyano.github.io/tags/fluentd/</link>
    <description>Recent content in Fluentd on blog.10rane.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Tue, 21 Oct 2014 01:00:00 +0900</lastBuildDate>
    <atom:link href="http://tatsuyano.github.io/tags/fluentd/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>elasticsearch&amp;kibanaをインストール</title>
      <link>http://tatsuyano.github.io/2014/10/21/how-to-install-and-setup-elasticsearch-and-kibana/</link>
      <pubDate>Tue, 21 Oct 2014 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2014/10/21/how-to-install-and-setup-elasticsearch-and-kibana/</guid>
      <description>

&lt;p&gt;&lt;a href=&#34;http://tatsuyano.github.io/2014/10/20/how-to-install-and-setup-fluentd/&#34;&gt;fluentdをインストールする&lt;/a&gt;の続きです。&lt;/p&gt;

&lt;p&gt;インストールする環境は以下になります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AmazonLinux&lt;/li&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;ruby 2.1.0 (anyenv)&lt;/li&gt;
&lt;li&gt;fluentd 0.10.55&lt;/li&gt;
&lt;li&gt;java 1.7.0_71&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;elasticsearchのインストール:b83273700bff93db8054f697424bc472&#34;&gt;elasticsearchのインストール&lt;/h3&gt;

&lt;p&gt;elasticsearch には java が必要なので、事前にインストールしてください。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd /opt
$ wget https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.3.4.tar.gz
$ tar xvzf elasticsearch-1.3.4.tar.gz
$ mv elasticsearch-1.3.4 elasticsearch
$ rm -rf elasticsearch-1.3.4.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

#### セットアップ

elasticsearch/config/elasticsearch.yml

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;index.number_of_replicas: 0 # レプリカセットの数
index.number_of_shards: 1   # シャードの数

path.data: /opt/elasticsearch/data     # index(データ)の保存先
path.logs: /var/log/elasticsearch/logs # ログの保存先
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;elasticsearch.yml&lt;/code&gt;に設定したディレクトリを作成&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ mkdir /opt/elasticsearch/data
$ sudo bash&lt;/p&gt;

&lt;h1 id=&#34;mkdir-p-var-log-elasticsearch-logs:b83273700bff93db8054f697424bc472&#34;&gt;mkdir -p /var/log/elasticsearch/logs&lt;/h1&gt;

&lt;h1 id=&#34;var-log:b83273700bff93db8054f697424bc472&#34;&gt;/var/log&lt;/h1&gt;

&lt;h1 id=&#34;chmod-777-r-elasticsearch-logs:b83273700bff93db8054f697424bc472&#34;&gt;chmod 777 -R elasticsearch/logs&lt;/h1&gt;

&lt;p&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&#34;起動方法:b83273700bff93db8054f697424bc472&#34;&gt;起動方法&lt;/h4&gt;

&lt;p&gt;バッググラウンドで動かす場合は&lt;code&gt;-d&lt;/code&gt;をつけます。&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ /opt/elasticsearch/bin/elasticsearch&lt;/p&gt;

&lt;p&gt;[2014-10-20 09:23:31,007][INFO ][node                     ] [Blue Bullet] version[1.3.4], pid[1729], build[a70f3cc/2014-09-30T09:07:17Z]
[2014-10-20 09:23:31,008][INFO ][node                     ] [Blue Bullet] initializing &amp;hellip;
[2014-10-20 09:23:31,012][INFO ][plugins                  ] [Blue Bullet] loaded [], sites []
[2014-10-20 09:23:33,921][INFO ][node                     ] [Blue Bullet] initialized
[2014-10-20 09:23:33,922][INFO ][node                     ] [Blue Bullet] starting &amp;hellip;
[2014-10-20 09:23:33,995][INFO ][transport                ] [Blue Bullet] bound_address {inet[/0:0:0:0:0:0:0:0:9300]}, publish_address {inet[/172.31.22.71:9300]}
[2014-10-20 09:23:34,011][INFO ][discovery                ] [Blue Bullet] elasticsearch/ti8R_MimTTOQX2PRMWWMGA
[2014-10-20 09:23:37,078][INFO ][cluster.service          ] [Blue Bullet] new_master [Blue Bullet][ti8R_MimTTOQX2PRMWWMGA][ghost.localdomain][inet[/172.31.22.71:9300]], reason: zen-disco-join (elected_as_master)
[2014-10-20 09:23:37,102][INFO ][http                     ] [Blue Bullet] bound_address {inet[/0:0:0:0:0:0:0:0:9200]}, publish_address {inet[/172.31.22.71:9200]}
[2014-10-20 09:23:37,102][INFO ][node                     ] [Blue Bullet] started
[2014-10-20 09:23:37,114][INFO ][gateway                  ] [Blue Bullet] recovered [0] indices into cluster_state
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;9200ポートに接続できれば成功です。&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ curl localhost:9200
{
  &amp;ldquo;status&amp;rdquo; : 200,
  &amp;ldquo;name&amp;rdquo; : &amp;ldquo;Blue Bullet&amp;rdquo;,
  &amp;ldquo;version&amp;rdquo; : {
    &amp;ldquo;number&amp;rdquo; : &amp;ldquo;1.3.4&amp;rdquo;,
    &amp;ldquo;build_hash&amp;rdquo; : &amp;ldquo;a70f3ccb52200f8f2c87e9c370c6597448eb3e45&amp;rdquo;,
    &amp;ldquo;build_timestamp&amp;rdquo; : &amp;ldquo;2014-09-30T09:07:17Z&amp;rdquo;,
    &amp;ldquo;build_snapshot&amp;rdquo; : false,
    &amp;ldquo;lucene_version&amp;rdquo; : &amp;ldquo;4.9&amp;rdquo;
  },
  &amp;ldquo;tagline&amp;rdquo; : &amp;ldquo;You Know, for Search&amp;rdquo;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h5 id=&#34;nginxの設定:b83273700bff93db8054f697424bc472&#34;&gt;Nginxの設定&lt;/h5&gt;

&lt;p&gt;elasticsearch の出力結果を、kibana に渡すためには、外部から参照できるよう
設定しないといけないので、サブドメインを用意しました。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;本当は同じドメインで、port番号を変えることで、サービスを切り替えたかったのですが、Nginxの設定がうまくできませんでした。。。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;/etc/nginx/sites-available/fluentd.10rane.com.conf&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# elasticsearch
server {
    listen 80;
    server_name es.10rane.com;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location / {
    proxy_set_header   X-Real-IP $remote_addr;
    proxy_set_header   Host      $http_host;
    proxy_pass         http://127.0.0.1:9200;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;kibanaをインストールする:b83273700bff93db8054f697424bc472&#34;&gt;Kibanaをインストールする&lt;/h3&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ cd /opt
$ wget &lt;a href=&#34;https://download.elasticsearch.org/kibana/kibana/kibana-3.1.1.tar.gz&#34;&gt;https://download.elasticsearch.org/kibana/kibana/kibana-3.1.1.tar.gz&lt;/a&gt;
$ tar xvzf kibana-3.1.1.tar.gz
$ rm kibana-3.1.1.tar.gz
$ mv kibana-3.1.1 kibana
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&#34;セットアップ:b83273700bff93db8054f697424bc472&#34;&gt;セットアップ&lt;/h4&gt;

&lt;p&gt;kibina/config.js&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;//elasticsearch: &amp;ldquo;http://&amp;ldquo;+window.location.hostname+&amp;rdquo;:9200&amp;rdquo;,
elasticsearch: &amp;ldquo;&lt;a href=&#34;http://es.10rane.com&amp;quot;&#34;&gt;http://es.10rane.com&amp;quot;&lt;/a&gt;,
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&#34;nginxの設定-1:b83273700bff93db8054f697424bc472&#34;&gt;Nginxの設定&lt;/h4&gt;

&lt;p&gt;こちらも新たにサブドメインを用意しました。&lt;/p&gt;

&lt;p&gt;/etc/nginx/sites-available/fluentd.10rane.com.conf&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# kibana
server {
    listen 80;
    server_name kibana.10rane.com;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;location / {
    root /opt/kibana/;
    index index.html index.htm;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;p&gt;Nginx 再起動後、設定したURLにアクセスし、下記の画面が出れば成功です。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;設定を変更しても、ブラウザのキャッシュが更新されていない場合があるので、設定変更後は、キャッシュをクリアしてみてください。&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/159938/blog_images/elasticsearch-and-kibana_01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;参考サイト:b83273700bff93db8054f697424bc472&#34;&gt;参考サイト&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.excale.net/index.php/archives/1929&#34;&gt;fluentd + Elasticsearch + Kibanaで始めるログ解析 (セットアップ編)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.elasticsearch.org/download/&#34;&gt;elasticsearch 1.3.4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.elasticsearch.org/overview/kibana/installation/&#34;&gt;kibana 3.1.1 installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;関連記事:b83273700bff93db8054f697424bc472&#34;&gt;関連記事&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.10rane.com/2014/10/20/how-to-install-and-setup-fluentd/&#34;&gt;fluentdをインストールする&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>fluentdをインストールする</title>
      <link>http://tatsuyano.github.io/2014/10/20/how-to-install-and-setup-fluentd/</link>
      <pubDate>Mon, 20 Oct 2014 01:00:00 +0900</pubDate>
      
      <guid>http://tatsuyano.github.io/2014/10/20/how-to-install-and-setup-fluentd/</guid>
      <description>

&lt;p&gt;blogのアクセス数がほんの少し増えてきたので、fluentd(フルーエントディ) をインストールしてみます。
今回、fluentd をインストールする環境は、以下になります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AmazonLinux&lt;/li&gt;
&lt;li&gt;nginx&lt;/li&gt;
&lt;li&gt;ruby 2.1.0 (anyenv)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;fluentd-を導入すると何ができるか:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;fluentd を導入すると何ができるか&lt;/h3&gt;

&lt;p&gt;fluentd はログなどを取得し、取得したデータを整形して elasticsearch + kibana などに渡すことで、データを簡単に可視化することができます。&lt;/p&gt;

&lt;h3 id=&#34;fluentdをgem経由でインストールする:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;fluentdをgem経由でインストールする&lt;/h3&gt;

&lt;p&gt;まずは&lt;a href=&#34;http://docs.fluentd.org/articles/install-by-gem&#34;&gt;公式&lt;/a&gt;どおりに&lt;code&gt;gem&lt;/code&gt;でインストールしてみます。&lt;/p&gt;

&lt;p&gt;&lt;em&gt;注意&lt;/em&gt;&lt;br /&gt;
&lt;a href=&#34;http://eure.jp/blog/fluentd_elasticsearch_kibana&#34;&gt;こちら&lt;/a&gt;の記事を参考に、&lt;a href=&#34;#yum_install&#34;&gt;yum経由でインストール&lt;/a&gt;も行いました。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gem install fluentd --no-ri --no-rdoc
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

メモリが割り当てられない？というエラーが出ました。

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;ERROR:  Error installing fluentd:
        ERROR: Failed to build gem native extension.

    $HOME/.anyenv/envs/rbenv/versions/2.1.0/bin/ruby extconf.rb
    Cannot allocate memory - $HOME/.anyenv/envs/rbenv/versions/2.1.0/bin/ruby extconf.rb 2&gt;&amp;1

Gem files will remain installed in $HOME/.anyenv/envs/rbenv/versions/2.1.0/lib/ruby/gems/2.1.0/gems/yajl-ruby-1.2.1 for inspection.
Results logged to $HOME/.anyenv/envs/rbenv/versions/2.1.0/lib/ruby/gems/2.1.0/extensions/x86_64-linux/2.1.0-static/yajl-ruby-1.2.1/gem_make.out
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

試しに`aws-sdk`をインストールしてから、再度インストールしてみたらうまくいきました。

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ gem install aws-sdk
$ gem install fluentd --no-ri --no-rdoc

$ source $HOME/.zshrc
$ fluentd --version
fluentd 0.10.55
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

#### セットアップ

次はセットアップを行います。
指定した`fluent`のホームディレクトリ直下に`fluent.conf`というファイルが生成されます。

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ fluentd --setup app/fluent
Installed app/fluent/fluent.conf.

$ tree app/fluent
app/fluent
├── fluent.conf
└── plugin
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

#### 起動方法

試しに公式どおりに起動してみます。
`-vv`でトレースモード、`&amp;`でバッググラウンドで起動します。
起動後にjsonを`fluent-cat`に渡して、`debug`タグの設定(stdout)どおり出力します。

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ fluentd -c app/fluent/fluent.conf -vv &amp;
[1] 22209

$ echo &#39;{&#34;json&#34;:&#34;message&#34;}&#39; | fluent-cat debug.test

2014-10-20 05:48:01 +0000 [trace]: plugin/in_forward.rb:189:initialize: accepted fluent socket from &#39;127.0.0.1:44260&#39;: object_id=69925032642500
2014-10-20 05:48:01 +0000 debug.test: {&#34;json&#34;:&#34;message&#34;}
2014-10-20 05:48:01 +0000 [trace]: plugin/in_forward.rb:245:on_close: closed fluent socket object_id=69925032642500
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

### Nginxのログをfluentdに流す

`fluent.conf`には、ログの入力方法`&lt;source&gt;`と、出力方法`&lt;match&gt;`を設定することができます。

&lt;a name=&#34;conf&#34;&gt;app/fluent/fluent.conf&lt;/a&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# access_log
&amp;lt;source&gt;
  type tail
  path /var/log/nginx/access.log
  format ltsv
  time_key time_local
  time_format %d/%b/%Y:%H:%M:%S %z
  pos_file /var/tmp/nginx_access_log.pos
  tag nginx.access
 &amp;lt;/source&gt;
 &amp;lt;match nginx.access&gt;
  type elasticsearch
  host localhost
  port 9200
  type_name access_log
  logstash_format true
  logstash_prefix nginx_access
  logstash_dateformat %Y%m
  buffer_type memory
  buffer_chunk_limit 10m
  buffer_queue_limit 10
  flush_interval 1s
  retry_limit 16
  retry_wait 1s
  &amp;lt;/match&gt;
  
 # error_log
 &amp;lt;source&gt;
  type tail
  path /var/log/nginx/error.log
  format /^(? &amp;lt;time&gt;[^ ]+ [^ ]+) \[(? &amp;lt;log_level&gt;.*)\] (? &amp;lt;pid&gt;\d*).(? &amp;lt;tid&gt;[^:]*): (? &amp;lt;message&gt;.*)$/
  pos_file /var/tmp/nginx_error_log.pos
  tag nginx.error
 &amp;lt;/source&gt;
 &amp;lt;match nginx.error&gt;
  type elasticsearch
  host localhost
  port 9200
  type_name error_log
  logstash_format true
  logstash_prefix nginx_error
  logstash_dateformat %Y%m
  buffer_type memory
  buffer_chunk_limit 10m
  buffer_queue_limit 10
  flush_interval 1s
  retry_limit 16
  retry_wait 1s
 &amp;lt;/match&gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;今回、fluentd を自分の$HOME以下にインストールしているので、
&lt;code&gt;path&lt;/code&gt;に設定してあるログのパーミッションに注意してください。&lt;/p&gt;

&lt;p&gt;また、&lt;code&gt;format&lt;/code&gt;をltsvに変更しているので、Nginx のログフォーマットも ltsv に合わせてください。&lt;/p&gt;

&lt;h4 id=&#34;nginxのログをltsvに変更する:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;Nginxのログをltsvに変更する&lt;/h4&gt;

&lt;p&gt;/etc/nginx/nginx.conf&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;log_format  ltsv  &#34;remote_addr:$remote_addr\t&#34;
                  &#34;remote_user:$remote_user\t&#34;
                  &#34;time_local:$time_local\t&#34;
                  &#34;request:$request\t&#34;
                  &#34;status:$status\t&#34;
                  &#34;body_bytes_sent:$body_bytes_sent\t&#34;
                  &#34;http_refer:$http_referer\t&#34;
                  &#34;http_user_agent:$http_user_agent&#34;;

access_log  /var/log/nginx/access.log  ltsv;
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;

現在生成されている`access.log`を削除し、Nginx の再起動、及び fluentd を(バックエンドで)起動します。

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo rm /var/log/nginx/access.log
$ sudo /etc/init.d/nginx restart

$ fluentd -c app/fluent/fluent.conf -vv &amp;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;/tmp/nginx.logが更新されていれば成功です。&lt;/p&gt;

&lt;h3 id=&#34;a-name-yum-install-yum経由でのインストール:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;&lt;a name=&#34;yum_install&#34;&gt;yum経由でのインストール&lt;/h3&gt;

&lt;p&gt;トレジャーデータ社が用意したyumリポジトリを使い、td-agent(fluentd) をインストールします。&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo bash&lt;/p&gt;

&lt;h1 id=&#34;cat-etc-yum-repos-d-treasuredata-repo:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;cat &amp;gt; /etc/yum.repos.d/treasuredata.repo&lt;/h1&gt;

&lt;p&gt;[treasuredata]
name=TreasureData
baseurl=&lt;a href=&#34;http://packages.treasure-data.com/redhat/$basearch&#34;&gt;http://packages.treasure-data.com/redhat/$basearch&lt;/a&gt;
gpgcheck=0&lt;/p&gt;

&lt;p&gt;$ sudo yum -y install td-agent
$ sudo chkconfig td-agent on
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&#34;fluentd-プラグインインストール:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;fluentd プラグインインストール&lt;/h4&gt;

&lt;p&gt;anyenvで管理していないrubyをupdateするのは少し気が引けます。。&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo /usr/lib64/fluent/ruby/bin/fluent-gem update
$ sudo /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-config-expander
$ sudo /usr/lib64/fluent/ruby/bin/fluent-gem install fluent-plugin-elasticsearch
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&#34;configファイル:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;configファイル&lt;/h4&gt;

&lt;p&gt;td-agentのconfigファイルは&lt;code&gt;/etc/td-agent/td-agent.conf&lt;/code&gt;にあるので、
&lt;a href=&#34;#conf&#34;&gt;以前作ったconfigファイル&lt;/a&gt;で上書きします。&lt;/p&gt;

&lt;p&gt;すでに&lt;code&gt;posファイル&lt;/code&gt;が生成されている場合は、削除してください。&lt;/p&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo cp $HOME/app/fluentd/fluent.conf /etc/td-agent/td-agent.conf
$ sudo rm /var/tmp/nginx_access_log.pos
$ sudo rm /var/tmp/nginx_error_log
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h4 id=&#34;起動-停止:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;起動、停止&lt;/h4&gt;

&lt;p&gt;&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo /etc/init.d/td-agent start
$ sudo /etc/init.d/td-agent stop
&lt;/code&gt;&lt;/pre&gt;
&lt;br&gt;&lt;/p&gt;

&lt;h3 id=&#34;参考記事:511d6dc5b146a16fbd94311c42c263c7&#34;&gt;参考記事&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.fluentd.org/articles/install-by-gem&#34;&gt;Installing Fluentd Using Ruby Gem&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://lab.bizreach.co.jp/66/&#34;&gt;AWS（Amazon Linux）にfluentdをいれてみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.excale.net/index.php/archives/2682&#34;&gt;NginxのアクセスログをLTSV形式にしてfluentdで回収する&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://knowledge.sakura.ad.jp/tech/1336/&#34;&gt;柔軟なログ収集を可能にする「fluentd」入門&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://docs.fluentd.org/ja/articles/common-log-formats&#34;&gt;Common Log Formats and How To Parse Them&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eure.jp/blog/fluentd_elasticsearch_kibana/&#34;&gt;今日から始めるfluentd × Elasticsearch × kibana – カジュアルな解析・高速化&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>